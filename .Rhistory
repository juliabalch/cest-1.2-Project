labs(title = "N2 speed", y = "speed", x = "time(sec)")
+ ylim(-50, 50))
reversals <- subset(df, df$speed <= 0, df$rel_time_sec <= 25)
reversals <- subset(df, df$speed <= 0 & df$rel_time_sec <= 25)
(N2REVspeedPlot <- reversals %>%
filter(rel_time_sec <= 50, genotypes == "N2") %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y = speed)) +
geom_point () +
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "N2 speed", y = "speed", x = "time(sec)")
+ ylim(-50, 50))
(cestREVspeedPlot <- reversals %>%
filter(rel_time_sec <= 50, genotypes == "cest-1.2", !worm_index %in% c("17", "185")) %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y =  speed)) +
geom_point ()+
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "cest-1.2 speed", y = "speed", x = "time(sec)")
+ ylim(-50, 50))
reversals <- subset(df, df$speed <= 0 & df$rel_time_sec <= 25)
(N2REVspeedPlot <- reversals %>%
filter(genotypes == "N2") %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y = speed)) +
geom_point () +
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "N2 speed", y = "speed", x = "time(sec)")
+ ylim(-50, 50))
(cestREVspeedPlot <- reversals %>%
filter(genotypes == "cest-1.2", !worm_index %in% c("17", "185")) %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y =  speed)) +
geom_point ()+
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "cest-1.2 speed", y = "speed", x = "time(sec)")
+ ylim(-50, 50))
(N2REVcurvaturePlot <- reversals %>%
filter(genotypes == "N2") %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y = curvature_midbody)) +
geom_point ()+
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "N2 curvature", y = "curvature", x = "time(sec)"))
(cestREVcurvaturePlot <- reversals %>%
filter(genotypes == "cest-1.2", !worm_index %in% c("17", "185")) %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y = curvature_midbody)) +
geom_point ()+
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "cest-1.2 curvature", y = "curvature", x = "time(sec)"))
reversals <- subset(df, df$speed <= 0 & df$rel_time_sec <= 25 & !worm_index %in% c("17", "185"))
(N2REVspeedPlot <- reversals %>%
filter(genotypes == "N2") %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y = speed)) +
geom_point () +
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "N2 speed", y = "speed", x = "time(sec)")
+ ylim(-50, 50))
(cestREVspeedPlot <- reversals %>%
filter(genotypes == "cest-1.2", !worm_index %in% c("17", "185")) %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y =  speed)) +
geom_point ()+
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "cest-1.2 speed", y = "speed", x = "time(sec)")
+ ylim(-50, 50))
(N2REVcurvaturePlot <- reversals %>%
filter(genotypes == "N2") %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y = curvature_midbody)) +
geom_point ()+
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "N2 curvature", y = "curvature", x = "time(sec)"))
(cestREVcurvaturePlot <- reversals %>%
filter(genotypes == "cest-1.2") %>%
ggplot(aes(x = rel_time_sec,color= as_factor(worm_index), y = curvature_midbody)) +
geom_point ()+
geom_line() +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set2") +
labs(title = "cest-1.2 curvature", y = "curvature", x = "time(sec)"))
write.csv(reversals)
write.csv(reversals, "C:\Users\julia\OneDrive\Desktop\Projects\cest-1.2-Project\tierpsy analysis" )
write.csv(reversals, r"C:\Users\julia\OneDrive\Desktop\Projects\cest-1.2-Project\tierpsy analysis" )
write.csv(reversals, "rC:\Users\julia\OneDrive\Desktop\Projects\cest-1.2-Project\tierpsy analysis" )
View(df)
View(df)
write.csv(reversals, "reversals")
write_csv(reversals, "reversals_tracking_subset")
write_csv(df, "full_tracking_data")
write_csv(df, "full_tracking_data.csv")
write_csv(reversals, "reversals_tracking_subset.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(patchwork)
library(ggbeeswarm)
library(kableExtra)
library(magrittr)
theme_set(theme_classic())
AntTouch <- read_csv('cest1.2_anterior_touch_merged.csv') %>%
mutate(plate = as.factor(plate))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(patchwork)
library(ggbeeswarm)
library(kableExtra)
library(magrittr)
library(viridis)
theme_set(theme_classic())
AntTouch <- read_csv('ant_touch_N2comparison.csv') %>%
(bodybend <- AntTouch %>%
ggplot(aes(x = genotype, y = bends, fill = genotype)) +
stat_summary(aes(fill= genotype),
geom = "bar",
fun = "mean",
width = 0.5,
position = position_dodge(width = .65)) +
stat_summary(geom = "errorbar",
fun.data = "mean_se",
width = 0.1,
position = position_dodge(width = .65)) +
scale_color_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
scale_fill_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
labs(y = "Number of Body Bends per Reversal") +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(size = 20)) +
theme(axis.text.x = element_text(angle = -15))+
theme(axis.ticks.length=unit(0.1,"inch")))
AntTouch <- read_csv('ant_touch_N2comparison.csv') %>%
(bodybend <- AntTouch %>%
ggplot(aes(x = genotype, y = bends, fill = genotype)) +
stat_summary(aes(fill= genotype),
geom = "bar",
fun = "mean",
width = 0.5,
position = position_dodge(width = .65)) +
stat_summary(geom = "errorbar",
fun.data = "mean_se",
width = 0.1,
position = position_dodge(width = .65)) +
scale_color_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
scale_fill_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
labs(y = "Number of Body Bends per Reversal") +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(size = 20)) +
theme(axis.text.x = element_text(angle = -15))+
theme(axis.ticks.length=unit(0.1,"inch")))
AntTouch <- read_csv('ant_touch_N2comparison.csv') %>%
(bodybend <- AntTouch %>%
ggplot(aes(x = genotype, y = bends, fill = genotype)) +
stat_summary(aes(fill= genotype),
geom = "bar",
fun = "mean",
width = 0.5,
position = position_dodge(width = .65)) +
stat_summary(geom = "errorbar",
fun.data = "mean_se",
width = 0.1,
position = position_dodge(width = .65)) +
scale_color_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
scale_fill_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
labs(y = "Number of Body Bends per Reversal") +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(size = 20)) +
theme(axis.text.x = element_text(angle = -15))+
theme(axis.ticks.length=unit(0.1,"inch")))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(patchwork)
library(ggbeeswarm)
library(kableExtra)
library(magrittr)
library(viridis)
theme_set(theme_classic())
AntTouch <- read_csv('ant_touch_N2comparison.csv') %>%
(bodybend <- AntTouch %>%
ggplot(aes(x = genotype, y = bends, fill = genotype)) +
stat_summary(aes(fill= genotype),
geom = "bar",
fun = "mean",
width = 0.5,
position = position_dodge(width = .65)) +
stat_summary(geom = "errorbar",
fun.data = "mean_se",
width = 0.1,
position = position_dodge(width = .65)) +
scale_color_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
scale_fill_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
labs(y = "Number of Body Bends per Reversal") +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(size = 20)) +
theme(axis.text.x = element_text(angle = -15))+
theme(axis.ticks.length=unit(0.1,"inch")))
AntTouch <- read_csv('ant_touch_N2comparison.csv')
(bodybend <- AntTouch %>%
ggplot(aes(x = genotype, y = bends, fill = genotype)) +
stat_summary(aes(fill= genotype),
geom = "bar",
fun = "mean",
width = 0.5,
position = position_dodge(width = .65)) +
stat_summary(geom = "errorbar",
fun.data = "mean_se",
width = 0.1,
position = position_dodge(width = .65)) +
scale_color_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
scale_fill_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
labs(y = "Number of Body Bends per Reversal") +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(size = 20)) +
theme(axis.text.x = element_text(angle = -15))+
theme(axis.ticks.length=unit(0.1,"inch")))
AntTouch <- read_csv('ant_touch_N2comparison.csv')
(bodybend <- AntTouch %>%
ggplot(aes(x = genotype, y = bends, fill = genotype)) +
stat_summary(aes(fill= genotype),
geom = "bar",
fun = "mean",
width = 0.5,
position = position_dodge(width = .65)) +
stat_summary(geom = "errorbar",
fun.data = "mean_se",
width = 0.1,
position = position_dodge(width = .65)) +
scale_color_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
scale_fill_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
labs(y = "Number of Body Bends per Reversal") +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(size = 20)) +
theme(axis.text.x = element_text(angle = -15))+
theme(axis.ticks.length=unit(0.1,"inch")))
(bodybend <- AntTouch %>%
ggplot(aes(x = genotype, y = bends, fill = genotype)) +
stat_summary(aes(fill= genotype),
geom = "bar",
fun = "mean",
width = 0.5,
position = position_dodge(width = .65)) +
stat_summary(geom = "errorbar",
fun.data = "mean_se",
width = 0.1,
position = position_dodge(width = .65)) +
labs(y = "Number of Body Bends per Reversal") +
theme(axis.text = element_text(size = 25)) +
theme(axis.title = element_text(size = 20)) +
theme(axis.text.x = element_text(angle = -15))+
theme(axis.ticks.length=unit(0.1,"inch")))
(bodybendPlot <- AntTouch %>%
ggplot(aes(x = genotype, fill = genotype, y = bends)) +
geom_boxplot() +
ggbeeswarm::geom_quasirandom(aes(group = genotype),
width = .1,
alpha = 0.3,
dodge.width = .75) +
stat_summary(aes(color = genotype),
geom = "errorbar",
fun.data = "mean_se",
width = 0.1,
position = position_dodge(width = 1.6)) +
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent") +
labs(title = "Body bends in anterior touch response",
y = "number of body bends per reversal") +
stat_summary(aes(shape = genotype), fun = mean, geom = "point",
color = "red", size = 2))
(bodybendPlot <- AntTouch %>%
ggplot(aes(x = genotype, fill = genotype, y = bends)) +
geom_boxplot() +
ggbeeswarm::geom_quasirandom(aes(group = genotype),
width = .1,
alpha = 0.3,
dodge.width = .75) +
stat_summary(aes(),
geom = "errorbar",
fun.data = "mean_se",
width = 0.1,
position = position_dodge(width = 1.6)) +
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent") +
labs(title = "Body bends in anterior touch response",
y = "number of body bends per reversal") +
stat_summary(aes(shape = genotype), fun = mean, geom = "point",
color = "red", size = 2))
update.packages()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
remove.packages(rlang)
remove.packages('rlang')
install.packages('rlang')
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(patchwork)
library(ggbeeswarm)
library(kableExtra)
library(magrittr)
theme_set(theme_classic())
df <- read_csv('Starvation_Data.csv')
View(df)
df <- read_csv('Starvation_Data.csv')
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)), na.rm = TRUE)
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)))
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)),
Percent_Bagged = ((100* Bagged)/(Dead + Alive)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , fill = Genotype, y = Percent_Survival)) +
geom_line() )
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() )
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(shape = Food))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 1)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.3)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.3)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.01)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent") +)
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
(BaggingPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Bagged)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)),
Percent_Bagged = ((100* Bagged)/(Dead + Alive)))
group_by(df, Food, Genotype)
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = Genotype, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)),
Percent_Bagged = ((100* Bagged)/(Dead + Alive)),
condition = (Genotype + Food))
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)),
Percent_Bagged = ((100* Bagged)/(Dead + Alive)),
condition = (Genotype, Food))
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)),
Percent_Bagged = ((100* Bagged)/(Dead + Alive)),
condition = (aggregate(Genotype, Food))
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)),
Percent_Bagged = ((100* Bagged)/(Dead + Alive)),
condition = (aggregate(Genotype, Food)))
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)),
Percent_Bagged = ((100* Bagged)/(Dead + Alive)),
condition = (unite(Genotype, Food)))
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)),
Percent_Bagged = ((100* Bagged)/(Dead + Alive)),
condition = (paste(Genotype, Food)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent1") +
scale_fill_brewer(palette = "Accent1"))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
(BaggingPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Bagged)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(patchwork)
library(ggbeeswarm)
library(kableExtra)
library(magrittr)
theme_set(theme_classic())
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
df <- read_csv('Starvation_Data.csv') %>%
mutate(Percent_Survival = ((100* Alive)/(Dead + Alive)),
Percent_Bagged = ((100* Bagged)/(Dead + Alive)),
condition = (paste(Genotype, Food)))
(SurvivalPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
(BaggingPlot <- df %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Bagged)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
(SurvivalPlot <- df %>%
filter(date == "9/29/2022") %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
(SurvivalPlot <- df %>%
filter(Date_Started == "9/29/2022") %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Survival)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
(BaggingPlot <- df %>%
filter(Date_Started == "9/29/2022") %>%
ggplot(aes(x = Time_Off_Food_Hours , color = condition, y = Percent_Bagged)) +
geom_line() +
geom_point(aes(shape = Food, size = 0.5))+
scale_color_brewer(palette = "Accent") +
scale_fill_brewer(palette = "Accent"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(patchwork)
library(ggbeeswarm)
library(kableExtra)
library(magrittr)
library(viridis)
theme_set(theme_classic())
df <- read_csv('bagging_data.csv')
View(df)
(BaggingPlot <- df %>%
filter(Date == "12/15/2022")
ggplot(aes(x = Time_Off_Food , color = Genotype, y = Percent_Bagged)) +
(BaggingPlot <- df %>%
filter(Date == "12/15/2022")  %>%
ggplot(aes(x = Time_Off_Food , color = Genotype, y = Percent_Bagged)) +
geom_point(size = 3.5)+
geom_line(size = 1) +
scale_color_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
scale_fill_viridis(discrete = TRUE, option = "D", alpha = 0.65) +
labs(y = "Percent Bagged", x = "Time Off Food (hours)") +
theme(axis.text=element_text(size=15), axis.title =element_text(size=15)))
